# siehe app.module.ts

schema {
  query: Query
  mutation: Mutation
}

"Funktionen, um Videospieldaten zu lesen"
type Query {
  videospiele(titel: String): [Videospiel!]

  videospiel(id: ID!): Videospiel
}

"Funktionen, um Videospiele neu anzulegen, zu aktualisieren oder zu löschen"
type Mutation {
  create(input: VideospielInput!): String

  update(input: VideospielUpdateInput!): Int

  delete(id: ID!): Boolean
}

"Datenschema zu einem Videospiel, das gelesen wird"
type Videospiel {
  id: ID
  version: Int
  titel: String
  rating: Int
  platform: Platform
  publisher: Publisher
  preis: Float
  rabatt: Float
  speicherplatz: Float
  datum: String
  homepage: String
  schlagwoerter: [String]
}

"Enum-Typ für den Platform eines Videospiels"
enum Platform {
  WINDOWS
  IOS
  ANDROID
}

"Enum-Typ für den Publisher eines Videospiels"
enum Publisher {
  EA
  ACTIVISION
  BETHESDA
}

"Daten für ein neues Videospiel"
input VideospielInput {
  titel: String!
  rating: Int
  platform: Platform 
  publisher: Publisher!
  preis: Float
  rabatt: Float
  speicherplatz: Float
  datum: String
  homepage: String
  schlagwoerter: [String]
}

"Daten für ein zu änderndes Videospiel"
input VideospielUpdateInput {
  id: ID
  version: Int
  titel: String!
  rating: Int
  platform: Platform
  publisher: Publisher!
  preis: Float
  rabatt: Float
  speicherplatz: Float
  datum: String
  homepage: String
  schlagwoerter: [String]
}
